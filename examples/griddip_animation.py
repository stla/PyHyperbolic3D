# -*- coding: utf-8 -*-
import os
from math import sqrt, acos, pi, cos, sin
import pyvista as pv
from hyperbolic3d.gyro import gyrotube, gyrotriangle, changesOfSign
import numpy as np

# spherical curve to define the camera motion
def satellite(t, R, alpha=3*pi/4, k=4):
    return R * np.array([
        cos(alpha) * cos(t) * cos(k*t) - sin(t) * sin(k*t),
        cos(alpha) * sin(t) * cos(k*t) + cos(t) * sin(k*t),
        sin(alpha) * cos(k*t)
    ])


# truncated icosidodecahedron with edge length 2*phi-2
phi = (1+sqrt(5))/2
vs0 = np.array([
  [1/phi, 1/phi, 3+phi],
  [2/phi, phi, 1+2*phi],
  [1/phi, phi**2, -1+3*phi],
  [2*phi-1, 2, 2+phi],
  [phi, 3, 2*phi]
])
# changes of sign
vs1 = changesOfSign(vs0)
# even permutations
vs2 = np.vstack(
  (vs1, vs1[:, [2,0,1]], vs1[:, [1,2,0]])
)

col = np.array([[1-phi]*(vs2.shape[0])]).T
vertices = np.vstack(
    (np.hstack((vs2, col)), np.hstack((vs2, -col)))    
)

r = sqrt(np.linalg.norm(vertices[0]))

squares = [
 [80, 81, 83, 82],
 [82, 83, 203, 202],
 [81, 83, 203, 201],
 [80, 81, 201, 200],
 [200, 201, 203, 202],
 [80, 82, 202, 200],
 [84, 85, 87, 86],
 [84, 85, 205, 204],
 [84, 86, 206, 204],
 [86, 87, 207, 206],
 [204, 205, 207, 206],
 [85, 87, 207, 205],
 [49, 65, 185, 169],
 [49, 57, 73, 65],
 [65, 73, 193, 185],
 [49, 57, 177, 169],
 [57, 73, 193, 177],
 [169, 177, 193, 185],
 [160, 161, 163, 162],
 [40, 41, 161, 160],
 [41, 43, 163, 161],
 [40, 42, 162, 160],
 [40, 41, 43, 42],
 [42, 43, 163, 162],
 [93, 101, 117, 109],
 [101, 117, 237, 221],
 [109, 117, 237, 229],
 [213, 221, 237, 229],
 [93, 109, 229, 213],
 [93, 101, 221, 213],
 [110, 118, 238, 230],
 [94, 102, 118, 110],
 [102, 118, 238, 222],
 [94, 110, 230, 214],
 [214, 222, 238, 230],
 [94, 102, 222, 214],
 [19, 35, 155, 139],
 [11, 19, 35, 27],
 [27, 35, 155, 147],
 [11, 27, 147, 131],
 [131, 139, 155, 147],
 [11, 19, 139, 131],
 [68, 76, 196, 188],
 [172, 180, 196, 188],
 [52, 60, 180, 172],
 [60, 76, 196, 180],
 [52, 60, 76, 68],
 [52, 68, 188, 172],
 [90, 98, 218, 210],
 [90, 106, 226, 210],
 [90, 98, 114, 106],
 [106, 114, 234, 226],
 [210, 218, 234, 226],
 [98, 114, 234, 218],
 [25, 33, 153, 145],
 [9, 25, 145, 129],
 [129, 137, 153, 145],
 [17, 33, 153, 137],
 [9, 17, 137, 129],
 [9, 17, 33, 25],
 [30, 38, 158, 150],
 [14, 22, 142, 134],
 [134, 142, 158, 150],
 [14, 30, 150, 134],
 [22, 38, 158, 142],
 [14, 22, 38, 30],
 [92, 108, 228, 212],
 [92, 100, 220, 212],
 [92, 100, 116, 108],
 [212, 220, 236, 228],
 [108, 116, 236, 228],
 [100, 116, 236, 220],
 [18, 34, 154, 138],
 [26, 34, 154, 146],
 [130, 138, 154, 146],
 [10, 18, 138, 130],
 [10, 26, 146, 130],
 [10, 18, 34, 26],
 [69, 77, 197, 189],
 [53, 69, 189, 173],
 [53, 61, 77, 69],
 [173, 181, 197, 189],
 [53, 61, 181, 173],
 [61, 77, 197, 181],
 [89, 97, 217, 209],
 [97, 113, 233, 217],
 [89, 97, 113, 105],
 [105, 113, 233, 225],
 [209, 217, 233, 225],
 [89, 105, 225, 209],
 [91, 99, 219, 211],
 [91, 107, 227, 211],
 [91, 99, 115, 107],
 [211, 219, 235, 227],
 [99, 115, 235, 219],
 [107, 115, 235, 227],
 [48, 56, 176, 168],
 [48, 64, 184, 168],
 [48, 56, 72, 64],
 [64, 72, 192, 184],
 [168, 176, 192, 184],
 [56, 72, 192, 176],
 [8, 24, 144, 128],
 [128, 136, 152, 144],
 [16, 32, 152, 136],
 [8, 16, 136, 128],
 [24, 32, 152, 144],
 [8, 16, 32, 24],
 [88, 96, 216, 208],
 [88, 96, 112, 104],
 [104, 112, 232, 224],
 [96, 112, 232, 216],
 [208, 216, 232, 224],
 [88, 104, 224, 208],
 [12, 20, 140, 132],
 [12, 20, 36, 28],
 [12, 28, 148, 132],
 [132, 140, 156, 148],
 [28, 36, 156, 148],
 [20, 36, 156, 140],
 [4, 5, 125, 124],
 [4, 5, 7, 6],
 [5, 7, 127, 125],
 [6, 7, 127, 126],
 [4, 6, 126, 124],
 [124, 125, 127, 126],
 [23, 39, 159, 143],
 [15, 23, 143, 135],
 [15, 23, 39, 31],
 [135, 143, 159, 151],
 [31, 39, 159, 151],
 [15, 31, 151, 135],
 [0, 2, 122, 120],
 [0, 1, 121, 120],
 [1, 3, 123, 121],
 [120, 121, 123, 122],
 [2, 3, 123, 122],
 [0, 1, 3, 2],
 [44, 46, 166, 164],
 [44, 45, 165, 164],
 [164, 165, 167, 166],
 [46, 47, 167, 166],
 [44, 45, 47, 46],
 [45, 47, 167, 165],
 [67, 75, 195, 187],
 [51, 67, 187, 171],
 [51, 59, 179, 171],
 [51, 59, 75, 67],
 [171, 179, 195, 187],
 [59, 75, 195, 179],
 [50, 66, 186, 170],
 [50, 58, 178, 170],
 [58, 74, 194, 178],
 [50, 58, 74, 66],
 [170, 178, 194, 186],
 [66, 74, 194, 186],
 [95, 111, 231, 215],
 [103, 119, 239, 223],
 [111, 119, 239, 231],
 [95, 103, 119, 111],
 [215, 223, 239, 231],
 [95, 103, 223, 215],
 [13, 21, 141, 133],
 [29, 37, 157, 149],
 [21, 37, 157, 141],
 [13, 29, 149, 133],
 [133, 141, 157, 149],
 [13, 21, 37, 29],
 [55, 71, 191, 175],
 [175, 183, 199, 191],
 [71, 79, 199, 191],
 [55, 63, 183, 175],
 [55, 63, 79, 71],
 [63, 79, 199, 183],
 [54, 70, 190, 174],
 [70, 78, 198, 190],
 [174, 182, 198, 190],
 [54, 62, 78, 70],
 [54, 62, 182, 174],
 [62, 78, 198, 182]
]

edges = [
 [0, 1],
 [0, 2],
 [0, 8],
 [0, 120],
 [1, 3],
 [1, 9],
 [1, 121],
 [2, 3],
 [2, 10],
 [2, 122],
 [3, 11],
 [3, 123],
 [4, 5],
 [4, 6],
 [4, 12],
 [4, 124],
 [5, 7],
 [5, 13],
 [5, 125],
 [6, 7],
 [6, 14],
 [6, 126],
 [7, 15],
 [7, 127],
 [8, 16],
 [8, 24],
 [8, 128],
 [9, 17],
 [9, 25],
 [9, 129],
 [10, 18],
 [10, 26],
 [10, 130],
 [11, 19],
 [11, 27],
 [11, 131],
 [12, 20],
 [12, 28],
 [12, 132],
 [13, 21],
 [13, 29],
 [13, 133],
 [14, 22],
 [14, 30],
 [14, 134],
 [15, 23],
 [15, 31],
 [15, 135],
 [16, 17],
 [16, 32],
 [16, 136],
 [17, 33],
 [17, 137],
 [18, 19],
 [18, 34],
 [18, 138],
 [19, 35],
 [19, 139],
 [20, 21],
 [20, 36],
 [20, 140],
 [21, 37],
 [21, 141],
 [22, 23],
 [22, 38],
 [22, 142],
 [23, 39],
 [23, 143],
 [24, 32],
 [24, 72],
 [24, 144],
 [25, 33],
 [25, 76],
 [25, 145],
 [26, 34],
 [26, 73],
 [26, 146],
 [27, 35],
 [27, 77],
 [27, 147],
 [28, 36],
 [28, 74],
 [28, 148],
 [29, 37],
 [29, 78],
 [29, 149],
 [30, 38],
 [30, 75],
 [30, 150],
 [31, 39],
 [31, 79],
 [31, 151],
 [32, 104],
 [32, 152],
 [33, 106],
 [33, 153],
 [34, 108],
 [34, 154],
 [35, 110],
 [35, 155],
 [36, 105],
 [36, 156],
 [37, 107],
 [37, 157],
 [38, 109],
 [38, 158],
 [39, 111],
 [39, 159],
 [40, 41],
 [40, 42],
 [40, 48],
 [40, 160],
 [41, 43],
 [41, 49],
 [41, 161],
 [42, 43],
 [42, 50],
 [42, 162],
 [43, 51],
 [43, 163],
 [44, 45],
 [44, 46],
 [44, 52],
 [44, 164],
 [45, 47],
 [45, 53],
 [45, 165],
 [46, 47],
 [46, 54],
 [46, 166],
 [47, 55],
 [47, 167],
 [48, 56],
 [48, 64],
 [48, 168],
 [49, 57],
 [49, 65],
 [49, 169],
 [50, 58],
 [50, 66],
 [50, 170],
 [51, 59],
 [51, 67],
 [51, 171],
 [52, 60],
 [52, 68],
 [52, 172],
 [53, 61],
 [53, 69],
 [53, 173],
 [54, 62],
 [54, 70],
 [54, 174],
 [55, 63],
 [55, 71],
 [55, 175],
 [56, 57],
 [56, 72],
 [56, 176],
 [57, 73],
 [57, 177],
 [58, 59],
 [58, 74],
 [58, 178],
 [59, 75],
 [59, 179],
 [60, 61],
 [60, 76],
 [60, 180],
 [61, 77],
 [61, 181],
 [62, 63],
 [62, 78],
 [62, 182],
 [63, 79],
 [63, 183],
 [64, 72],
 [64, 112],
 [64, 184],
 [65, 73],
 [65, 116],
 [65, 185],
 [66, 74],
 [66, 113],
 [66, 186],
 [67, 75],
 [67, 117],
 [67, 187],
 [68, 76],
 [68, 114],
 [68, 188],
 [69, 77],
 [69, 118],
 [69, 189],
 [70, 78],
 [70, 115],
 [70, 190],
 [71, 79],
 [71, 119],
 [71, 191],
 [72, 192],
 [73, 193],
 [74, 194],
 [75, 195],
 [76, 196],
 [77, 197],
 [78, 198],
 [79, 199],
 [80, 81],
 [80, 82],
 [80, 88],
 [80, 200],
 [81, 83],
 [81, 89],
 [81, 201],
 [82, 83],
 [82, 90],
 [82, 202],
 [83, 91],
 [83, 203],
 [84, 85],
 [84, 86],
 [84, 92],
 [84, 204],
 [85, 87],
 [85, 93],
 [85, 205],
 [86, 87],
 [86, 94],
 [86, 206],
 [87, 95],
 [87, 207],
 [88, 96],
 [88, 104],
 [88, 208],
 [89, 97],
 [89, 105],
 [89, 209],
 [90, 98],
 [90, 106],
 [90, 210],
 [91, 99],
 [91, 107],
 [91, 211],
 [92, 100],
 [92, 108],
 [92, 212],
 [93, 101],
 [93, 109],
 [93, 213],
 [94, 102],
 [94, 110],
 [94, 214],
 [95, 103],
 [95, 111],
 [95, 215],
 [96, 97],
 [96, 112],
 [96, 216],
 [97, 113],
 [97, 217],
 [98, 99],
 [98, 114],
 [98, 218],
 [99, 115],
 [99, 219],
 [100, 101],
 [100, 116],
 [100, 220],
 [101, 117],
 [101, 221],
 [102, 103],
 [102, 118],
 [102, 222],
 [103, 119],
 [103, 223],
 [104, 112],
 [104, 224],
 [105, 113],
 [105, 225],
 [106, 114],
 [106, 226],
 [107, 115],
 [107, 227],
 [108, 116],
 [108, 228],
 [109, 117],
 [109, 229],
 [110, 118],
 [110, 230],
 [111, 119],
 [111, 231],
 [112, 232],
 [113, 233],
 [114, 234],
 [115, 235],
 [116, 236],
 [117, 237],
 [118, 238],
 [119, 239],
 [120, 121],
 [120, 122],
 [120, 128],
 [121, 123],
 [121, 129],
 [122, 123],
 [122, 130],
 [123, 131],
 [124, 125],
 [124, 126],
 [124, 132],
 [125, 127],
 [125, 133],
 [126, 127],
 [126, 134],
 [127, 135],
 [128, 136],
 [128, 144],
 [129, 137],
 [129, 145],
 [130, 138],
 [130, 146],
 [131, 139],
 [131, 147],
 [132, 140],
 [132, 148],
 [133, 141],
 [133, 149],
 [134, 142],
 [134, 150],
 [135, 143],
 [135, 151],
 [136, 137],
 [136, 152],
 [137, 153],
 [138, 139],
 [138, 154],
 [139, 155],
 [140, 141],
 [140, 156],
 [141, 157],
 [142, 143],
 [142, 158],
 [143, 159],
 [144, 152],
 [144, 192],
 [145, 153],
 [145, 196],
 [146, 154],
 [146, 193],
 [147, 155],
 [147, 197],
 [148, 156],
 [148, 194],
 [149, 157],
 [149, 198],
 [150, 158],
 [150, 195],
 [151, 159],
 [151, 199],
 [152, 224],
 [153, 226],
 [154, 228],
 [155, 230],
 [156, 225],
 [157, 227],
 [158, 229],
 [159, 231],
 [160, 161],
 [160, 162],
 [160, 168],
 [161, 163],
 [161, 169],
 [162, 163],
 [162, 170],
 [163, 171],
 [164, 165],
 [164, 166],
 [164, 172],
 [165, 167],
 [165, 173],
 [166, 167],
 [166, 174],
 [167, 175],
 [168, 176],
 [168, 184],
 [169, 177],
 [169, 185],
 [170, 178],
 [170, 186],
 [171, 179],
 [171, 187],
 [172, 180],
 [172, 188],
 [173, 181],
 [173, 189],
 [174, 182],
 [174, 190],
 [175, 183],
 [175, 191],
 [176, 177],
 [176, 192],
 [177, 193],
 [178, 179],
 [178, 194],
 [179, 195],
 [180, 181],
 [180, 196],
 [181, 197],
 [182, 183],
 [182, 198],
 [183, 199],
 [184, 192],
 [184, 232],
 [185, 193],
 [185, 236],
 [186, 194],
 [186, 233],
 [187, 195],
 [187, 237],
 [188, 196],
 [188, 234],
 [189, 197],
 [189, 238],
 [190, 198],
 [190, 235],
 [191, 199],
 [191, 239],
 [200, 201],
 [200, 202],
 [200, 208],
 [201, 203],
 [201, 209],
 [202, 203],
 [202, 210],
 [203, 211],
 [204, 205],
 [204, 206],
 [204, 212],
 [205, 207],
 [205, 213],
 [206, 207],
 [206, 214],
 [207, 215],
 [208, 216],
 [208, 224],
 [209, 217],
 [209, 225],
 [210, 218],
 [210, 226],
 [211, 219],
 [211, 227],
 [212, 220],
 [212, 228],
 [213, 221],
 [213, 229],
 [214, 222],
 [214, 230],
 [215, 223],
 [215, 231],
 [216, 217],
 [216, 232],
 [217, 233],
 [218, 219],
 [218, 234],
 [219, 235],
 [220, 221],
 [220, 236],
 [221, 237],
 [222, 223],
 [222, 238],
 [223, 239],
 [224, 232],
 [225, 233],
 [226, 234],
 [227, 235],
 [228, 236],
 [229, 237],
 [230, 238],
 [231, 239]
]

# stereographic projection
def sproj(v):
    return acos(v[3]/r) / (r**4 - v[3]**4)**(1/4) * v[0:3]
verts3d = np.apply_along_axis(sproj, 1, vertices)

# plot
s = 1

nframes = 180
t_ = np.linspace(0, 2*pi, nframes+1)[:nframes]

spheres = [None]*(len(verts3d))
for i, v in enumerate(verts3d):
    spheres[i] = pv.Sphere(0.05, center=v)

gyrotubes = [None]*(len(edges))
for i, edge in enumerate(edges):
    A = verts3d[edge[0], :]
    B = verts3d[edge[1], :]
    gyrotubes[i] = gyrotube(A, B, s, 0.025)

gyrosquares = [None]*(len(squares))
for i, square in enumerate(squares):
    A = verts3d[square[0], :]
    B = verts3d[square[1], :]
    C = verts3d[square[2], :]
    D = verts3d[square[3], :]
    mesh1 = gyrotriangle(A, B, C, s)
    mesh2 = gyrotriangle(A, C, D, s)
    gyrosquares[i] = mesh1.merge(mesh2)


for i, t in enumerate(t_):
    pltr = pv.Plotter(window_size=[512,512], off_screen=True)
    pltr.set_background("#363940")
    pltr.set_focus([0, 0, 0])
    pltr.set_position(satellite(t, 18))
    pngname = "pngs/griddip_pic%03d.png" % i
    for sphere in spheres:
        pltr.add_mesh(
            sphere, color="whitesmoke", smooth_shading=True, specular=15
        )
    for edge in gyrotubes:
        pltr.add_mesh(
            edge, color="whitesmoke", smooth_shading=True, specular=15
        )
    for square in gyrosquares:
        pltr.add_mesh(
            square, color="#8B2252", smooth_shading=True, specular=15
        )
    pltr.show(screenshot=pngname)
    
os.system(
    "gifski --frames=pngs/griddip_pic*.png --fps=8 -o griddip.gif"    
)
